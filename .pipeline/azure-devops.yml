trigger:
  branches:
    include:
      - master
  paths:
    include:
      - 'components/*'
      - 'main/*'
      - 'test/*'

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: run_rename_project_script
    value: true
  - name: esp_docker_tag
    value : v4.4.4
  - group: sonarcloud
    # This variable group must have:
    # - sonarcloud_organization
    # - sonarcloud_token

jobs:
  - job: build_firmware
    displayName: Build Firmware
    continueOnError: false
    steps:
    - checkout: self
      persistCredentials: true
      fetchDepth: 0

    # This is needed only if you are working on the
    # esp32-project-template project; remove this task
    # if you are using this project as a template.
    - task: PowerShell@2
      displayName: Run Rename-Project.ps1
      condition: and(succeeded(), eq(variables.run_rename_project_script, true))
      inputs:
        targetType: 'filePath'
        failOnStderr: true
        showWarnings: true
        filePath: Rename-Project.ps1
        arguments: $(Build.Repository.LocalPath) esp32-project-template

    - task: Docker@2
      displayName: Login Docker
      inputs:
        containerRegistry: 'Docker Registry'
        command: 'login'
        addPipelineData: false

    - task: PowerShell@2
      displayName: Pull ESP-IDF Image
      inputs:
        targetType: 'inline'
        failOnStderr: true
        showWarnings: true
        script: docker pull espressif/idf:$(esp_docker_tag)

    - task: PowerShell@2
      displayName: Build with Sonar
      inputs:
        targetType: 'inline'
        failOnStderr: false
        showWarnings: true
        script: docker run --rm -e LC_ALL='C.UTF-8' --env SONAR_ORGANIZATION_NAME=$(sonarcloud_organization) --env SONAR_ORGANIZATION_TOKEN=$(sonarcloud_token) -v $(Build.Repository.LocalPath):/project -w /project espressif/idf:$(esp_docker_tag) bash .pipeline/scripts/build-with-sonar.sh

    - task: CopyFiles@2
      displayName: Copy Binaries to Artifact Staging Area
      inputs:
        SourceFolder: '$(Build.Repository.LocalPath)/build'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        Contents: '*.bin'
        OverWrite: true
        ignoreMakeDirErrors: true

    - task: PowerShell@2
      displayName: Build Test
      inputs:
        targetType: 'inline'
        failOnStderr: true
        showWarnings: true
        script: docker run --rm -e LC_ALL='C.UTF-8' -v $(Build.Repository.LocalPath):/project -w /project espressif/idf:$(esp_docker_tag) idf.py -C ./test build

    - task: PublishBuildArtifacts@1
      displayName: Publish Binaries
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'binaries'
        publishLocation: 'Container'